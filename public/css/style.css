* {
    font-family: 'Roboto';
    font-weight: 300;
}

/* SPLASH */

.splash {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgb(62, 104, 102);
    z-index: 200;
    text-align: center;
}
.splash.display-none {
    position: fixed;
    opacity: 0;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgb(62, 104, 102);
    z-index: -10;
    text-align: center;
    transition: all 0.5s;
}

img {  
    margin: 0;
    position: fixed;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
}
  

/* BODY */

body {
    padding-top: 40px;
    display: flex;
    flex-direction: column;
    align-items: center;
}


label {
    margin-bottom: 20px;
}

#title {
    position: fixed;
    right: 15px;
    bottom: 1px;
    border: 5px solid rgb(192, 192, 192);
    padding: 10px;
    border-radius: 50%;
    width: 30px;
    height: 30px;
}

#holeNum {
    font-size: x-large;
    font-weight: 800;
    color: grey;
    padding-top: 5px;
}

#svg-logo {
    width: 70%;
    padding: 20px 0;
    margin-bottom: 20px;
    border-bottom: 1px solid rgb(62, 104, 102);
}

h1 {
    display: flex;
    align-items: center;
    padding: 30px 20px;
    border-bottom: 1px solid black;
}

.index-menu {
    margin-top: 70%;
}

#logsign {
    padding-top: 30px;
}

.underline h4 {
    text-decoration: underline;
}

div div, div {
    flex-grow: 3;
    display: flex;
    flex-direction: column;
    align-items: center;
}

#questionnaire {
    display: none;
}

li:hover {
    cursor: pointer;
    background-color: rgb(221, 221, 221);
}

ul {
    list-style: none;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 0px;
    font-weight: 200;

}

h2,
h3,
h4,
li {
    text-align: center;
}

li {
    display: inline-block;
    padding: 5px 20px;
    margin: 5px;
    border-radius: 30px;
    background-color: rgb(168, 222, 210);
    color: white;
}

select {
    padding: 5px 10px;
    border-radius: 5px;
}

a {
    text-decoration: none;
}

.bold-green {
    font-size: 25px;
    font-weight: 400;
    color: rgb(62, 104, 102);
}

form {
    display: flex;
    flex-direction: column;
    align-items: center;
}

input {
    margin-bottom: 10px;
    padding: 5px;
    border: 1px solid black;
    border-radius: 7px;
}
input:last-child, input:first-child {
    margin-top: 10px;
}

input:last-child {
    border-radius: 30px;
    background-color: rgb(168, 222, 210);
    color: white;
    padding: 5px 20px;
}

input:last-child:hover {
    cursor: pointer;
    background-color: rgb(111, 148, 146);
}

button, a, li{
    display: flex;
    margin: 10px;
    border-radius: 30px;
    width: 200px;
    padding: 10px 0px;
    justify-content: center;
    background-color: rgb(168, 222, 210);
    color: white;
    border: 0;
    font-size: 15px;
}

#exit{
  width: 100px;
  position: absolute;
  bottom: 3%;
  left: 7%;
}

#finalFinish {
  width: 100px;
  margin-top: 60%;

}

#startRange {
  margin-top: 50px;
}

#end {
  margin-top: 30px;
}

button:hover, a:hover {
    background-color: rgb(111, 148, 146);

}

/* TIMER */

/* Sets the containers height and width */
.base-timer {
    position: relative;
    height: 300px;
    width: 300px;
}

/* Removes SVG styling that would hide the time label */
.base-timer__circle {
    fill: none;
    stroke: none;
}

/* The SVG path that displays the timer's progress */
.base-timer__path-elapsed {
    stroke-width: 7px;
    stroke: rgb(202, 202, 202);
}

.base-timer__label {
    position: absolute;

    /* Size should match the parent container */
    width: 300px;
    height: 300px;

    /* Keep the label aligned to the top */
    top: 0;

    /* Create a flexible box that centers content vertically and horizontally */
    display: flex;
    align-items: center;
    justify-content: center;

    /* Sort of an arbitrary number; adjust to your liking */
    font-size: 48px;
}

.base-timer__path-remaining {
    /* Just as thick as the original ring */
    stroke-width: 7px;

    /* Rounds the line endings to create a seamless circle */
    stroke-linecap: round;

    /* Makes sure the animation starts at the top of the circle */
    transform: rotate(90deg);
    transform-origin: center;

    /* One second aligns with the speed of the countdown timer */
    transition: 1s linear all;

    /* Allows the ring to change color when the color value updates */
    stroke: currentColor;

}

.base-timer__svg {
    /* Flips the svg and makes the animation to move left-to-right */
    transform: scaleX(-1);
}

.green {
  color: rgb(80, 130, 130);
}

/* Finished Training */